import menus.*

import wollok.game.*

import jugador.*

import puntos.*

import enemigos.*

program BadIceCreamGame {
    game.cellSize(40)
    game.title("Bad Ice Cream")
    game.height(18)
    game.width(18)
    //Inicio menu
    //menuPersonaje.cargar()
    new MenuPersonaje().cargar()
    //inicio
    game.start()


//const position = new MutablePosition
	
	
    //Juego puntos
    keyboard.r().onPressDo({ 
        if(sincronizadorDePantallas.habilitar()){
            const nuevaFruta = interactuador.obtenerPrimerElemento("r"," sobre una fruta para recolectarla")
            if(nuevaFruta.esFruta()){
                //jugador.recolectar(nuevaFruta)
                game.allVisuals().filter({objeto => objeto.image() == datosJugador.imagen()}).head().recolectar(nuevaFruta)
                points.sumarFrutas()
            }
            if(points.frutasObtenidas() == 10 || points.frutasObtenidas() == 20){
                spawn.dibujarFrutas()
            }
            if(points.frutasObtenidas() == 30){
                sincronizadorDePantallas.cambiarPantalla("ganador")
                //const menuGanaste = new MenuGanaste()
                //menuGanaste.cargar()
                new MenuGanaste().cargar()
            }
        }
        
    })

    keyboard.e().onPressDo({if(sincronizadorDePantallas.habilitar()) {game.allVisuals().filter({objeto => objeto.image() == datosJugador.imagen()}).head().atacarDerecha()}})
    keyboard.q().onPressDo({if(sincronizadorDePantallas.habilitar()) {game.allVisuals().filter({objeto => objeto.image() == datosJugador.imagen()}).head().atacarIzquierda()}})


    // Si tocas shift se gana el juego automaticamente. Asi cuando probamos no tenemos que jugarlo completo. Despues esto se saca.
	keyboard.shift().onPressDo({
        if(sincronizadorDePantallas.habilitar()){
           sincronizadorDePantallas.cambiarPantalla("ganador")
            /*const menuGanaste = new MenuGanaste()
            menuGanaste.cargar()})*/
            new MenuGanaste().cargar() 
        }
	})

    game.onCollideDo(lineaEnemiga.enemigo(), {elemento => elemento.impactado()})
}

object interactuador{
    method obtenerPrimerElemento(key,accion){
        const colliders = game.colliders(game.allVisuals().filter({objeto => objeto.image() == datosJugador.imagen()}).head())
        if (colliders.isEmpty())
            throw new DomainException(message = "Apreta "+ key + accion, source = game.allVisuals().filter({objeto => objeto.image() == datosJugador.imagen()}).head())
    return colliders.head()
    }
}